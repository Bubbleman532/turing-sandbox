name: unary multiplication
source code: |
  input: '||*|||'
  blank: _
  start state: eachA
  table:
    eachA:
      '|':
        write: _
        R: toB
      '*':
        R: skip
    toB:
      '|': R
      '*':
        R: eachB
    nextA:
      '|,*': L
      _:
        write: '|'
        R: eachA
    skip:
      '|': R
      _:
        R: done
    done: {}
    eachB:
      '|':
        write: _
        R: sep
      _:
        L: nextA
    sep:
      '|': R
      _:
        R: add
    add:
      '|': R
      _:
        write: '|'
        L: sepL
    sepL:
      '|': L
      _:
        L: nextB
    nextB:
      '|': L
      _:
        write: '|'
        R: eachB

  
  # Multiplies together two unary numbers separated by a '*'.
  # (Unary is like tallying. Here '||*|||' means 2 times 3.)
  
  # The idea:
  #   multiply(0, b) = 0
  #   multiply(a, b) = b + multiply(a-1, b)   when a > 0
  
  # This machine directly utilises the 'copy 1s' machine:
  # For each 1 in a, add a copy of b.

positions:
  eachA:  {x: 400, y:  50}
  toB:    {x: 400, y: 150}
  eachB:  {x: 400, y: 250}
  sep:   {x: 400, y: 350}
  add:   {x: 400, y: 450}

  sepL:  {x: 280, y: 350}
  nextB:  {x: 280, y: 250}

  nextA:  {x: 280, y: 90}
  skip:   {x: 520, y: 90}
  done:   {x: 520, y: 190}
